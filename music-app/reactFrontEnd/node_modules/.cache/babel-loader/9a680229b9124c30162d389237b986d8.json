{"ast":null,"code":"var _jsxFileName = \"D:\\\\Computer Sceince\\\\Projects\\\\Music-Application\\\\music-app\\\\reactFrontEnd\\\\src\\\\components\\\\addNewSong.jsx\";\nimport React from \"react\";\nimport Form from \"./common/form\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewSong extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        albumName: \"\",\n        artistName: \"\",\n        selectedImage: null\n      },\n      errors: {}\n    };\n    this.schema = {\n      name: Joi.string().required().label(\"Name\"),\n      albumName: Joi.string().required().label(\"Album Name\"),\n      artistName: Joi.string().required().label(\"Artist Name\"),\n      selectedImage: Joi.any().label('Image')\n    };\n\n    this.handleSelectImage = event => {\n      // console.log(event.target.files[0]);\n      const data = { ...this.state.data\n      };\n      data.selectedImage = event.target.files[0]; // console.log(\"data\", data.selectedImage);\n\n      this.setState({\n        data\n      }); //  console.log(\"yasater\", this.state.selectedImage);\n    };\n\n    this.doSubmit = async () => {\n      const {\n        name,\n        albumName,\n        artistName,\n        selectedImage\n      } = this.state.data;\n      const newSongTitle = name;\n      const newSongAlbumName = albumName;\n      const newSongArtistName = artistName;\n      const newSongImage = selectedImage;\n      const formData = new FormData();\n      formData.append(\"image\", newSongImage);\n      formData.append(\"name\", newSongTitle);\n      formData.append(\"artist\", newSongArtistName);\n      formData.append(\"album\", newSongAlbumName);\n      axios.post('http://localhost:5000/createNewSong', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      window.location = \"/\";\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\",\n        multiple: false,\n        onChange: this.handleSelectImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"name\", \"Name\", true), this.renderInput(\"albumName\", \"Album Name\", false), this.renderInput(\"artistName\", \"Artist Name\", false), this.renderButton(\"ADD\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddNewSong;","map":{"version":3,"sources":["D:/Computer Sceince/Projects/Music-Application/music-app/reactFrontEnd/src/components/addNewSong.jsx"],"names":["React","Form","axios","Joi","AddNewSong","state","data","name","albumName","artistName","selectedImage","errors","schema","string","required","label","any","handleSelectImage","event","target","files","setState","doSubmit","newSongTitle","newSongAlbumName","newSongArtistName","newSongImage","formData","FormData","append","post","headers","window","location","render","handleSubmit","renderInput","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport axios from \"axios\";\r\nimport Joi from \"joi-browser\";\r\nclass AddNewSong extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      albumName: \"\",\r\n      artistName: \"\",\r\n      selectedImage : null ,\r\n    },\r\n    errors: {}, \r\n  };\r\n  schema = {\r\n    name: Joi.string().required().label(\"Name\"),\r\n    albumName: Joi.string().required().label(\"Album Name\"),\r\n    artistName: Joi.string().required().label(\"Artist Name\"),\r\n    selectedImage : Joi.any().label('Image'),\r\n  };\r\n  handleSelectImage = (event) => {\r\n    // console.log(event.target.files[0]);\r\n    const data = {...this.state.data};\r\n    data.selectedImage = event.target.files[0];\r\n    // console.log(\"data\", data.selectedImage);\r\n    this.setState({data});\r\n    \r\n    //  console.log(\"yasater\", this.state.selectedImage);\r\n  }\r\n  doSubmit =async () => {\r\n   \r\n    const { name, albumName, artistName, selectedImage } = this.state.data;\r\n\r\n    const newSongTitle = name;\r\n    const newSongAlbumName = albumName;\r\n    const newSongArtistName = artistName;\r\n    const newSongImage = selectedImage;\r\n\r\n    \r\n    \r\n   \r\n    const formData = new FormData();\r\n    formData.append(\"image\", newSongImage);\r\n    formData.append(\"name\", newSongTitle);\r\n    formData.append(\"artist\", newSongArtistName);\r\n    formData.append(\"album\", newSongAlbumName);\r\n        \r\n    axios.post('http://localhost:5000/createNewSong', formData, {\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n\r\n    window.location = \"/\";\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Add New Song</h1>\r\n        <input type = 'file' name = \"image\" accept = \"image/*\" multiple = {false} onChange = {this.handleSelectImage} />\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"name\", \"Name\", true)}\r\n          {this.renderInput(\"albumName\", \"Album Name\", false)}\r\n          {this.renderInput(\"artistName\", \"Artist Name\", false)}\r\n          {this.renderButton(\"ADD\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewSong;\r\n"]},"metadata":{},"sourceType":"module"}