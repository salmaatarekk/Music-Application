{"ast":null,"code":"var _jsxFileName = \"D:\\\\Computer Sceince\\\\Projects\\\\Music-Application\\\\music-app\\\\reactFrontEnd\\\\src\\\\components\\\\homePage.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { styled, alpha } from \"@mui/material/styles\";\nimport Button from '@mui/material/Button';\nimport SongCard from \"./common/songCard\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      songs: []\n    };\n    this.SearchIconWrapper = styled(\"div\")(({\n      theme\n    }) => ({\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }));\n    this.StyledInputBase = styled(InputBase)(({\n      theme\n    }) => ({\n      color: \"inherit\",\n      \"& .MuiInputBase-input\": {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n          width: \"20ch\"\n        }\n      }\n    }));\n\n    this.handleNewSong = () => {\n      // this.props.history.push('/newSong');\n      window.location = '/newSong';\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: songs\n    } = await axios.get('http://localhost:5000/music/songs');\n    this.setState({\n      songs\n    });\n    console.log(\"songs\", songs);\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [user && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: this.handleNewSong,\n        className: \"btn btn-danger m-2 \",\n        children: \"New Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        children: [/*#__PURE__*/_jsxDEV(this.SearchIconWrapper, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n          placeholder: \"Search\\u2026\",\n          inputProps: {\n            \"aria-label\": \"search\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), this.state.songs.map(c => /*#__PURE__*/_jsxDEV(SongCard, {\n        SongName: c.title,\n        ArtistName: c.artistName,\n        SongID: c.id,\n        User: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["D:/Computer Sceince/Projects/Music-Application/music-app/reactFrontEnd/src/components/homePage.jsx"],"names":["React","Component","axios","styled","alpha","Button","SongCard","SearchIcon","HomePage","state","songs","SearchIconWrapper","theme","padding","spacing","height","position","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","width","breakpoints","up","handleNewSong","window","location","componentDidMount","data","get","setState","console","log","render","user","props","map","c","title","artistName","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport Button from '@mui/material/Button';\r\nimport SongCard from \"./common/songCard\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    songs: []\r\n  };\r\n   SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n  \r\n   StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n  async componentDidMount() {\r\n    const {data : songs} = await axios.get('http://localhost:5000/music/songs');\r\n    this.setState({ songs });\r\n    console.log(\"songs\", songs);\r\n  }\r\n  handleNewSong = () =>{\r\n    // this.props.history.push('/newSong');\r\n    window.location = '/newSong';\r\n  }\r\n  \r\n  render() {\r\n    const {user} = this.props; \r\n    return (\r\n      <React.Fragment>\r\n        {user && <Button variant = 'contained' onClick = {this.handleNewSong}  className=\"btn btn-danger m-2 \">New Song</Button> }\r\n        <Search>\r\n            <this.SearchIconWrapper>\r\n              <SearchIcon \r\n               \r\n              />\r\n            </this.SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n      {\r\n        this.state.songs.map(c => (\r\n          <SongCard\r\n           SongName = {c.title} \r\n           ArtistName = {c.artistName}\r\n           SongID = {c.id}\r\n           User = {user}\r\n            />\r\n        ))\r\n      }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}