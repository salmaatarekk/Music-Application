{"ast":null,"code":"var _jsxFileName = \"D:\\\\Computer Sceince\\\\Projects\\\\Music-Application\\\\music-app\\\\reactFrontEnd\\\\src\\\\components\\\\addNewSong.jsx\";\nimport React from \"react\";\nimport Form from \"./common/form\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewSong extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        albumName: \"\",\n        artistName: \"\",\n        selectedImage: {}\n      },\n      errors: {}\n    };\n    this.schema = {\n      name: Joi.string().required().label(\"Name\"),\n      albumName: Joi.string().required().label(\"Album Name\"),\n      artistName: Joi.string().required().label(\"Artist Name\"),\n      selectedImage: Joi.any().label('Image')\n    };\n\n    this.handleSelectImage = event => {\n      const Image = event.target.files[0];\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          selectedImage: reader.result\n        });\n      };\n\n      reader.readAsDataURL(Image);\n      console.log(\"read\", reader);\n    };\n\n    this.doSubmit = async () => {\n      const {\n        name,\n        albumName,\n        artistName,\n        selectedImage\n      } = this.state.data;\n      const newSongName = name;\n      const newSongAlbum = albumName;\n      const newSongArtist = artistName;\n      const newImage = selectedImage;\n      console.log(\"name\", newSongName);\n      console.log(\"album\", newSongAlbum);\n      console.log(\"artist\", newSongArtist);\n      console.log(\"Image\", newImage);\n      const formData = new FormData();\n      formData.append(\"image\", newImage);\n      await axios.post('http://localhost:5000/createNewSong', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }); // axios.post(\"http://localhost:5000/createNewSong\", {\n      //   newSongTitle: newSongName,\n      //   newSongAlbumName: newSongAlbum,\n      //   newSongArtistName: newSongArtist,\n      //   newSongImage : newImage,\n      // });\n\n      window.location = \"/\";\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\",\n        multiple: false,\n        onChange: this.handleSelectImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"name\", \"Name\", true), this.renderInput(\"albumName\", \"Album Name\", false), this.renderInput(\"artistName\", \"Artist Name\", false), this.renderButton(\"ADD\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddNewSong;","map":{"version":3,"sources":["D:/Computer Sceince/Projects/Music-Application/music-app/reactFrontEnd/src/components/addNewSong.jsx"],"names":["React","Form","axios","Joi","AddNewSong","state","data","name","albumName","artistName","selectedImage","errors","schema","string","required","label","any","handleSelectImage","event","Image","target","files","reader","FileReader","onloadend","setState","result","readAsDataURL","console","log","doSubmit","newSongName","newSongAlbum","newSongArtist","newImage","formData","FormData","append","post","headers","window","location","render","handleSubmit","renderInput","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport axios from \"axios\";\r\nimport Joi from \"joi-browser\";\r\nclass AddNewSong extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      albumName: \"\",\r\n      artistName: \"\",\r\n      selectedImage : {} ,\r\n    },\r\n    errors: {}, \r\n  };\r\n  schema = {\r\n    name: Joi.string().required().label(\"Name\"),\r\n    albumName: Joi.string().required().label(\"Album Name\"),\r\n    artistName: Joi.string().required().label(\"Artist Name\"),\r\n    selectedImage : Joi.any().label('Image'),\r\n  };\r\n  handleSelectImage = (event) => {\r\n\r\n    const Image = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onloadend = () =>{\r\n      this.setState({selectedImage : reader.result });\r\n    }\r\n    reader.readAsDataURL(Image);\r\n\r\n    console.log(\"read\", reader);\r\n    \r\n  }\r\n  doSubmit =async () => {\r\n   \r\n    const { name, albumName, artistName, selectedImage } = this.state.data;\r\n\r\n    const newSongName = name;\r\n    const newSongAlbum = albumName;\r\n    const newSongArtist = artistName;\r\n    const newImage = selectedImage;\r\n\r\n    console.log(\"name\", newSongName);\r\n    console.log(\"album\", newSongAlbum);\r\n    console.log(\"artist\", newSongArtist);\r\n    console.log(\"Image\", newImage);\r\n    \r\n   \r\n    const formData = new FormData();\r\n    formData.append(\"image\", newImage);\r\n        \r\n     await axios.post('http://localhost:5000/createNewSong', formData, {\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n\r\n    // axios.post(\"http://localhost:5000/createNewSong\", {\r\n    //   newSongTitle: newSongName,\r\n    //   newSongAlbumName: newSongAlbum,\r\n    //   newSongArtistName: newSongArtist,\r\n    //   newSongImage : newImage,\r\n    // });\r\n    window.location = \"/\";\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Add New Song</h1>\r\n        <input type = 'file' name = \"image\" accept = \"image/*\" multiple = {false} onChange = {this.handleSelectImage} />\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"name\", \"Name\", true)}\r\n          {this.renderInput(\"albumName\", \"Album Name\", false)}\r\n          {this.renderInput(\"artistName\", \"Artist Name\", false)}\r\n          {this.renderButton(\"ADD\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewSong;\r\n"]},"metadata":{},"sourceType":"module"}