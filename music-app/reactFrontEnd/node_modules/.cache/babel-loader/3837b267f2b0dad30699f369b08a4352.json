{"ast":null,"code":"var _jsxFileName = \"D:\\\\Computer Sceince\\\\Projects\\\\Music-Application\\\\music-app\\\\reactFrontEnd\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport React, { Component } from \"react\";\nimport Input from \"./input\";\nimport CheckBox from \"./checkbox\";\nimport Joi from 'joi-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.data, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // call the server\n\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      if (error) return error ? error.details[0].message : null;\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.handleChecked = e => {\n      const data = { ...this.state.data\n      };\n      data[e.currentTarget.checked] = e.currentTarget.checked;\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: this.validate(),\n      className: \"btn btn-primary\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderInput(name, label, autoFocus, type = \"text\") {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      value: data[name],\n      label: label,\n      onChange: this.handleChange,\n      autoFocus: autoFocus,\n      error: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderCheckBox(check) {\n    return /*#__PURE__*/_jsxDEV(CheckBox, {\n      onChange: this.handleChecked,\n      checked: check\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["D:/Computer Sceince/Projects/Music-Application/music-app/reactFrontEnd/src/components/common/form.jsx"],"names":["React","Component","Input","CheckBox","Joi","Form","state","data","errors","validate","options","abortEarly","error","schema","item","details","path","message","handleSubmit","e","preventDefault","setState","doSubmit","validateProperty","name","value","obj","handleChange","currentTarget","input","errorMessage","handleChecked","checked","renderButton","label","renderInput","autoFocus","type","renderCheckBox","check"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport CheckBox from \"./checkbox\";\r\nimport  Joi  from 'joi-browser';\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = {abortEarly : false};\r\n    \r\n    const {error} = Joi.validate(this.state.data, this.schema, options);\r\n    if(!error)\r\n    return null;\r\n    const errors = {};\r\n    for(let item of error.details)\r\n    errors[item.path[0]] = item.message;\r\n    \r\n    return errors;    \r\n    \r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // call the server\r\n    const errors = this.validate();\r\n    this.setState( {errors : errors || {} });\r\n    if(errors)\r\n    return;\r\n    this.doSubmit();   \r\n    \r\n  };\r\n  validateProperty = ({name, value}) => {\r\n    const obj = { [name] : value}; \r\n    const schema = { [name] : this.schema[name] }  \r\n    const {error} = Joi.validate(obj, schema );\r\n    if(error)\r\n    \r\n    return error ? error.details[0].message : null;\r\n    \r\n  };\r\n  handleChange = ({currentTarget : input}) =>{\r\n    const errors = {...this.state.errors};\r\n    const errorMessage = this.validateProperty(input);\r\n    if(errorMessage)\r\n    errors[input.name] = errorMessage;\r\n    else\r\n    delete errors[input.name];\r\n    \r\n    const data = {...this.state.data};\r\n    data[input.name] = input.value;\r\n    \r\n    this.setState( {data, errors} );\r\n  };\r\n  handleChecked = (e) =>{\r\n    const data = {...this.state.data};\r\n    data[e.currentTarget.checked] = e.currentTarget.checked; \r\n    \r\n  }\r\n  \r\n  renderButton(label) {\r\n    return <button\r\n    disabled = {this.validate()}\r\n    className=\"btn btn-primary\">{label}</button>;\r\n  }\r\n\r\n  renderInput(name, label, autoFocus, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        autoFocus={autoFocus}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCheckBox(check) {\r\n    return <CheckBox\r\n      onChange = {this.handleChecked}\r\n      checked  = {check}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}