{"ast":null,"code":"var _jsxFileName = \"D:\\\\Computer Sceince\\\\Projects\\\\Music-Application\\\\music-app\\\\reactFrontEnd\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport React, { Component } from \"react\";\nimport Input from \"./input\";\nimport CheckBox from \"./checkbox\";\nimport { Joi } from 'joi-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data\n      });\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  } //   handleSubmit = e => {\n  //     e.preventDefault();\n  //     // call the server\n  //     const errors = this.validate();\n  //     this.setState( {errors : errors || {} });\n  //     if(errors)\n  //         return;\n  //      this.doSubmit();   \n  // };\n\n\n  renderInput(name, label, autoFocus, type = \"text\") {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      value: data[name],\n      label: label,\n      onChange: this.handleChange,\n      autoFocus: autoFocus //   error={errors[name]}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderCheckBox() {\n    return /*#__PURE__*/_jsxDEV(CheckBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["D:/Computer Sceince/Projects/Music-Application/music-app/reactFrontEnd/src/components/common/form.jsx"],"names":["React","Component","Input","CheckBox","Joi","Form","state","data","errors","handleChange","currentTarget","input","name","value","setState","renderButton","label","renderInput","autoFocus","type","renderCheckBox"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,aAApB;;;AACA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;;AAAA,SAmB7BC,YAnB6B,GAmBd,CAAC;AAACC,MAAAA,aAAa,EAAGC;AAAjB,KAAD,KAA4B;AAGvC,YAAMJ,IAAI,GAAG,EAAC,GAAG,KAAKD,KAAL,CAAWC;AAAf,OAAb;AACAA,MAAAA,IAAI,CAACI,KAAK,CAACC,IAAP,CAAJ,GAAmBD,KAAK,CAACE,KAAzB;AACA,WAAKC,QAAL,CAAe;AAACP,QAAAA;AAAD,OAAf;AACH,KAzB4B;AAAA;;AAM3BQ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,wBAAO;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA,gBAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAR0B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AASEC,EAAAA,WAAW,CAACL,IAAD,EAAOI,KAAP,EAAcE,SAAd,EAAyBC,IAAI,GAAG,MAAhC,EAAwC;AACjD,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEa,IADR;AAEE,MAAA,IAAI,EAAEP,IAFR;AAGE,MAAA,KAAK,EAAEL,IAAI,CAACK,IAAD,CAHb;AAIE,MAAA,KAAK,EAAEI,KAJT;AAKE,MAAA,QAAQ,EAAE,KAAKP,YALjB;AAME,MAAA,SAAS,EAAES,SANb,CAOD;;AAPC;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAEDE,EAAAA,cAAc,GAAG;AACf,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA5C0B;;AA+C7B,eAAef,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport CheckBox from \"./checkbox\";\r\nimport { Joi } from 'joi-browser';\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  renderButton(label) {\r\n    return <button className=\"btn btn-primary\">{label}</button>;\r\n  }\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     // call the server\r\n//     const errors = this.validate();\r\n//     this.setState( {errors : errors || {} });\r\n//     if(errors)\r\n//         return;\r\n//      this.doSubmit();   \r\n        \r\n// };\r\nhandleChange = ({currentTarget : input}) =>{\r\n    \r\n\r\n    const data = {...this.state.data};\r\n    data[input.name] = input.value;\r\n    this.setState( {data} );\r\n};\r\n\r\n  renderInput(name, label, autoFocus, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        autoFocus={autoFocus}\r\n     //   error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCheckBox() {\r\n    return <CheckBox />;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}